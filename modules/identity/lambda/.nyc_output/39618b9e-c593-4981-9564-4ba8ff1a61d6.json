{"/projects/terraform-aws-cognito-auth/modules/identity/lambda/src/index.ts":{"path":"/projects/terraform-aws-cognito-auth/modules/identity/lambda/src/index.ts","statementMap":{"0":{"start":{"line":23,"column":0},"end":{"line":23,"column":62}},"1":{"start":{"line":24,"column":18},"end":{"line":24,"column":36}},"2":{"start":{"line":36,"column":22},"end":{"line":41,"column":16}},"3":{"start":{"line":43,"column":4},"end":{"line":44,"column":60}},"4":{"start":{"line":44,"column":8},"end":{"line":44,"column":60}},"5":{"start":{"line":46,"column":4},"end":{"line":46,"column":17}},"6":{"start":{"line":48,"column":0},"end":{"line":48,"column":26}}},"fnMap":{"0":{"name":"handler","decl":{"start":{"line":35,"column":15},"end":{"line":35,"column":22}},"loc":{"start":{"line":35,"column":30},"end":{"line":47,"column":1}},"line":35}},"branchMap":{"0":{"loc":{"start":{"line":43,"column":4},"end":{"line":44,"column":60}},"type":"if","locations":[{"start":{"line":43,"column":4},"end":{"line":44,"column":60}},{"start":{"line":43,"column":4},"end":{"line":44,"column":60}}],"line":43}},"s":{"0":1,"1":1,"2":3,"3":2,"4":1,"5":1,"6":1},"f":{"0":3},"b":{"0":[1,1]},"inputSourceMap":{"version":3,"file":"/projects/terraform-aws-cognito-auth/modules/identity/lambda/src/index.ts","sources":["/projects/terraform-aws-cognito-auth/modules/identity/lambda/src/index.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;;;;;;GAoBG;;AAGH,qCAAwD;AAExD;;+EAE+E;AAE/E;;;;;;GAMG;AACI,KAAK,UAAU,OAAO,CAC3B,KAAkC;IAElC,MAAM,EAAE,KAAK,EAAE,GAAG,MAAM,IAAI,wCAA8B,CAAC;QACzD,UAAU,EAAE,YAAY;KACzB,CAAC,CAAC,SAAS,CAAC;QACX,UAAU,EAAE,KAAK,CAAC,UAAU;QAC5B,MAAM,EAAE,UAAU,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,KAAK,GAAG;KACxD,CAAC,CAAC,OAAO,EAAE,CAAA;IAEZ,yDAAyD;IACzD,IAAI,KAAM,CAAC,MAAM;QACf,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAA;IAErD,iCAAiC;IACjC,OAAO,KAAK,CAAA;AACd,CAAC;AAhBD,0BAgBC","sourcesContent":["/*\n * Copyright (c) 2018-2019 Martin Donath <martin.donath@squidfunk.com>\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to\n * deal in the Software without restriction, including without limitation the\n * rights to use, copy, modify, merge, publish, distribute, sublicense, and/or\n * sell copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NON-INFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n * FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS\n * IN THE SOFTWARE.\n */\n\nimport { CognitoUserPoolTriggerEvent } from \"aws-lambda\"\nimport { CognitoIdentityServiceProvider } from \"aws-sdk\"\n\n/* ----------------------------------------------------------------------------\n * Handlers\n * ------------------------------------------------------------------------- */\n\n/**\n * Check if email is not already registered\n *\n * @param event - User pool trigger event\n *\n * @return Promise resolving with user pool trigger event\n */\nexport async function handler(\n  event: CognitoUserPoolTriggerEvent\n): Promise<CognitoUserPoolTriggerEvent> {\n  const { Users } = await new CognitoIdentityServiceProvider({\n    apiVersion: \"2016-04-18\"\n  }).listUsers({\n    UserPoolId: event.userPoolId,\n    Filter: `email=\"${event.request.userAttributes.email}\"`\n  }).promise()\n\n  /* If email address is already registered, throw error */\n  if (Users!.length)\n    throw new Error(\"Email address already registered\")\n\n  /* Otherwise just return event */\n  return event\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6d152a09b3899ca709ed3ac2c569c1d0c926e75e","contentHash":"d5ce8e3af8d4c2eab4b8fba67bca103d8067db98b781d75bf9b6ce20777a4c5d"}}